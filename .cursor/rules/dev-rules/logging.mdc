---
description: 
globs: 
alwaysApply: false
---
---

RuleType: Always
description: Flutterアプリ内のロギング方針と実装ルール
globs:
- lib/log/logger.dart
- lib/\*\*/\*.dart

---

## 🎯 ロギングの目的

このプロジェクトでは、開発中の状態確認・デバッグ効率向上のために Dart 標準の `logging` パッケージを使用する。

すべてのログ出力は `appLogger` を通じて行い、ログレベル・タイムスタンプ・発信元・メッセージが表示される。

---

## ✅ 使用パッケージ

```yaml
dependencies:
  logging: ^1.2.0
```


### 出力レベルの基準

| シーン                   | ログレベル                | 備考                     |
| --------------------- | -------------------- | ---------------------- |
| アプリの起動・終了             | `INFO`               | `main()` 開始・終了時など      |
| 画面遷移                  | `INFO`               | `Navigator.push/pop` 時 |
| ユーザー操作（ボタン押下など）       | `FINE`               | UIイベントのトリガ記録           |
| 非常に細かいUI操作（onHoverなど） | `FINER`              | 微細なユーザー操作              |
| 予期しない例外や失敗            | `WARNING` / `SEVERE` | try/catch エラー等         |

---

## 🚫 ログ出力禁止ポリシー（セキュリティ）

以下の内容をログに出力してはならない：

* ユーザーが入力した文字列の内容（例：パスワード・認証コード）
* QRコードに含まれるデータ（例：URLやIDなど）
* QRコードスキャン結果（例：読み取った文字列）

> 許可例： `appLogger.fine("Generateボタンが押されました")`
>
> 禁止例：`appLogger.info("入力内容: $text")` ← NG

**理由：本アプリはセキュアなスタンドアロン用途であり、ログに秘匿情報を残すことは避ける。**

---

## 🧪 今後の拡張（任意）

* ファイルへのログ出力（path\_provider + File）
* UI上でログ表示（開発モード専用パネル）
